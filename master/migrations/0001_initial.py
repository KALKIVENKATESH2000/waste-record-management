# Generated by Django 4.2.2 on 2023-08-21 13:08

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import master.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=50)),
                ('person_number', models.CharField(max_length=20)),
                ('register_no', models.CharField(max_length=50)),
                ('branches', models.CharField(max_length=150)),
                ('vat_no', models.CharField(max_length=50)),
                ('company_logo', models.FileField(upload_to=master.models.company_logos)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=50)),
                ('id_no', models.CharField(max_length=20)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], max_length=50)),
                ('employment_start', models.DateField(max_length=20)),
                ('employment_end', models.DateField(max_length=20)),
                ('race', models.CharField(choices=[('Race1', 'Race1'), ('Race2', 'Race2'), ('Race3', 'Race3')], max_length=50)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='WasteRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=20)),
                ('entry_date', models.DateTimeField(max_length=20)),
                ('manifest_no', models.CharField(max_length=255)),
                ('disposal_slip_no', models.CharField(max_length=50)),
                ('vehicle_registration', models.CharField(max_length=20)),
                ('bin_size', models.CharField(max_length=50)),
                ('bin_GW', models.IntegerField()),
                ('land_fill', models.CharField(choices=[('W.D. Hall', 'W.D. Hall')], default='W.D. Hal', max_length=50)),
                ('recyclable_item', models.CharField(choices=[('Common', 'Common'), ('HL1', 'HL1'), ('HL2', 'HL2'), ('K4', 'K4'), ('SMW', 'SMW'), ('SN', 'SN'), ('HD', 'HD'), ('LD Clear', 'LD Clear'), ('LD Mix', 'LD Mix'), ('LD Shrink', 'LD Shrink'), ('PET Brown', 'PET Brown'), ('PET Clear', 'PET Clear'), ('PET Green', 'PET Green'), ('Glass', 'Glass')], max_length=50)),
                ('solid_waste', models.IntegerField()),
                ('liquid_waste', models.IntegerField()),
                ('hazardous_waste', models.IntegerField()),
                ('rubble', models.IntegerField()),
                ('total_waste', models.CharField(max_length=50)),
                ('collection_note', models.FileField(upload_to=master.models.upload_waste_records)),
                ('service_provider_certificate', models.FileField(upload_to=master.models.upload_waste_records)),
                ('landfill_disposal_certificate', models.FileField(upload_to=master.models.upload_waste_records)),
                ('lab_test_result', models.FileField(upload_to=master.models.upload_waste_records)),
                ('weight_bridge_certificate', models.FileField(upload_to=master.models.upload_waste_records)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('member_id', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=250, null=True, unique=True, verbose_name='Email')),
                ('company', models.ForeignKey(default='None', on_delete=django.db.models.deletion.CASCADE, related_name='company', to='master.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
